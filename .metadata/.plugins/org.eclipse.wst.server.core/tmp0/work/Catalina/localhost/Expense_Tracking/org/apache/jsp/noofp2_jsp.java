/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/11.0.8
 * Generated at: 2025-07-24 14:16:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import ConnectionUtility.ConnectionClass;
import java.sql.*;

public final class noofp2_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("ConnectionUtility.ConnectionClass");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');
      out.write('\n');

    Connection con = null;
    Statement stmt = null;
    String errorMsg = "";
    int total = 1;
    if (request.getParameter("persons") != null) {
        total = Integer.parseInt(request.getParameter("persons"));
        session.setAttribute("total", total);
    } else if (session.getAttribute("total") != null) {
        total = (Integer) session.getAttribute("total");
    }

    int current = 1;
    if (session.getAttribute("current") != null) {
        current = (Integer) session.getAttribute("current");
    }

    String gn = (String) session.getAttribute("group_name");

    if (request.getParameter("user") != null) {
        String un = request.getParameter("user");
        try {
        	con=ConnectionClass.getConnection();
            stmt = con.createStatement();
            String sql = "INSERT INTO group_member(group_name, user_name) VALUES('" + gn + "', '" + un + "')";
            stmt.executeUpdate(sql);
            current++;
            session.setAttribute("current", current);
        } catch(Exception e) {
            errorMsg = e.getMessage();
        } finally {
            try { if (stmt != null) stmt.close(); } catch(Exception e) {}
            try { if (con != null) con.close(); } catch(Exception e) {}
        }
    } else {
        session.setAttribute("current", current);
    }

    if (current > total) {
        session.removeAttribute("current");
        session.removeAttribute("total");
        response.sendRedirect("addexp.jsp");
        return;
    }

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("  <meta charset=\"UTF-8\">\n");
      out.write("  <title>Add Group Members</title>\n");
      out.write("  <style>\n");
      out.write("    body {\n");
      out.write("      margin: 0;\n");
      out.write("      min-height: 100vh;\n");
      out.write("      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n");
      out.write("      background: linear-gradient(135deg, #e0eafc 0%, #cfdef3 100%);\n");
      out.write("      display: flex;\n");
      out.write("      flex-direction: column;\n");
      out.write("      align-items: center;\n");
      out.write("      justify-content: center;\n");
      out.write("      background-size: 200% 200%;\n");
      out.write("      animation: bgMove 14s ease-in-out infinite;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    @keyframes bgMove {\n");
      out.write("      0% { background-position: 0% 50%; }\n");
      out.write("      50% { background-position: 100% 50%; }\n");
      out.write("      100% { background-position: 0% 50%; }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .dashboard-card {\n");
      out.write("      background: #fff;\n");
      out.write("      border-radius: 28px;\n");
      out.write("      box-shadow: 0 8px 32px 0 rgba(52, 152, 219, 0.18), 0 1.5px 6px 0 rgba(0,0,0,0.07);\n");
      out.write("      padding: 36px 36px 24px 36px;\n");
      out.write("      min-width: 380px;\n");
      out.write("      max-width: 500px;\n");
      out.write("      width: 100%;\n");
      out.write("      display: flex;\n");
      out.write("      flex-direction: column;\n");
      out.write("      align-items: center;\n");
      out.write("      animation: fadeIn 1s cubic-bezier(.42,0,.58,1);\n");
      out.write("      margin-top: 40px;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    @keyframes fadeIn {\n");
      out.write("      from {opacity: 0; transform: translateY(40px);}\n");
      out.write("      to {opacity: 1; transform: translateY(0);}\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    h1 {\n");
      out.write("      color: #3b82f6;\n");
      out.write("      font-size: 2rem;\n");
      out.write("      font-weight: 700;\n");
      out.write("      margin-bottom: 10px;\n");
      out.write("      text-align: center;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    h3 {\n");
      out.write("      color: #2563eb;\n");
      out.write("      margin: 0 0 20px 0;\n");
      out.write("      font-weight: 400;\n");
      out.write("      text-align: center;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .search-form {\n");
      out.write("      width: 100%;\n");
      out.write("      display: flex;\n");
      out.write("      flex-direction: column;\n");
      out.write("      gap: 12px;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .search-form label {\n");
      out.write("      font-weight: 600;\n");
      out.write("      color: #3b82f6;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .search-form input[type=\"text\"] {\n");
      out.write("      padding: 12px 14px;\n");
      out.write("      border-radius: 8px;\n");
      out.write("      border: 1.5px solid #b6d0f7;\n");
      out.write("      background: #f6fbff;\n");
      out.write("      font-size: 1rem;\n");
      out.write("      color: #2563eb;\n");
      out.write("      transition: border 0.25s, box-shadow 0.25s;\n");
      out.write("      width: 100%;\n");
      out.write("      box-sizing: border-box;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .search-form input[type=\"text\"]:focus {\n");
      out.write("      border: 1.5px solid #3b82f6;\n");
      out.write("      box-shadow: 0 0 8px #b6d0f7;\n");
      out.write("      outline: none;\n");
      out.write("      background: #e0eafc;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .search-form input[type=\"submit\"] {\n");
      out.write("      background: linear-gradient(90deg, #3b82f6 0%, #60a5fa 100%);\n");
      out.write("      color: white;\n");
      out.write("      padding: 12px 0;\n");
      out.write("      border: none;\n");
      out.write("      border-radius: 10px;\n");
      out.write("      cursor: pointer;\n");
      out.write("      font-size: 1.08rem;\n");
      out.write("      font-weight: 700;\n");
      out.write("      box-shadow: 0 2px 10px 0 rgba(52, 152, 219, 0.10);\n");
      out.write("      margin-top: 4px;\n");
      out.write("      transition: background 0.3s, transform 0.2s;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .search-form input[type=\"submit\"]:hover {\n");
      out.write("      background: linear-gradient(90deg, #60a5fa 0%, #3b82f6 100%);\n");
      out.write("      transform: translateY(-2px) scale(1.03);\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    .error-msg {\n");
      out.write("      color: #d72660;\n");
      out.write("      margin-bottom: 12px;\n");
      out.write("      font-weight: 500;\n");
      out.write("      text-align: center;\n");
      out.write("    }\n");
      out.write("\n");
      out.write("    @media (max-width: 540px) {\n");
      out.write("      .dashboard-card {\n");
      out.write("        min-width: 0;\n");
      out.write("        max-width: 98vw;\n");
      out.write("        padding: 20px 4vw 12px 4vw;\n");
      out.write("      }\n");
      out.write("    }\n");
      out.write("  </style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("  <div class=\"dashboard-card\">\n");
      out.write("    <h1>Add Group Members</h1>\n");
      out.write("    <h3>Step 3 of 3: Member ");
      out.print( current );
      out.write(" of ");
      out.print( total );
      out.write(" </h3>\n");
      out.write("\n");
      out.write("    ");
 if (!errorMsg.isEmpty()) { 
      out.write("\n");
      out.write("      <div class=\"error-msg\">");
      out.print( errorMsg );
      out.write("</div>\n");
      out.write("    ");
 } 
      out.write("\n");
      out.write("\n");
      out.write("    <form class=\"search-form\" method=\"post\">\n");
      out.write("      <label for=\"user\">Enter username for member ");
      out.print( current );
      out.write(":</label>\n");
      out.write("      <input type=\"text\" name=\"user\" id=\"user\" placeholder=\"Enter username\" required>\n");
      out.write("      <input type=\"hidden\" name=\"persons\" value=\"");
      out.print( total );
      out.write("\">\n");
      out.write("      <input type=\"submit\" value=\"Next\">\n");
      out.write("    </form>\n");
      out.write("  </div>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
