/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/11.0.8
 * Generated at: 2025-07-24 13:57:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import ConnectionUtility.ConnectionClass;
import java.sql.*;
import jakarta.servlet.http.*;
import jakarta.servlet.*;

public final class payment_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("ConnectionUtility.ConnectionClass");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

    String msg = "";
    boolean success = false;
    String eidStr = request.getParameter("Pay");
    if (eidStr != null) {
        int eid = Integer.parseInt(eidStr);
        Connection con = null;
        Statement stmt = null;
        try {
        	con=ConnectionClass.getConnection();
            stmt = con.createStatement();
            String sql = "UPDATE expenses SET paid=1 WHERE expenses_id=" + eid;
            int rows = stmt.executeUpdate(sql);
            if (rows > 0) {
                msg = "Payment Successful!";
                success = true;
            } else {
                msg = "No such expense found.";
            }
        } catch (Exception e) {
            msg = "Error: " + e.getMessage();
        } finally {
            try { if (stmt != null) stmt.close(); } catch (Exception e) {}
            try { if (con != null) con.close(); } catch (Exception e) {}
        }
    } else {
        msg = "Invalid request.";
    }

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <title>Payment Status</title>\n");
      out.write("    <style>\n");
      out.write("        body {\n");
      out.write("          margin: 0;\n");
      out.write("          min-height: 100vh;\n");
      out.write("          font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n");
      out.write("          background: linear-gradient(135deg, #e0eafc 0%, #cfdef3 100%);\n");
      out.write("          display: flex;\n");
      out.write("          align-items: center;\n");
      out.write("          justify-content: center;\n");
      out.write("          background-size: 200% 200%;\n");
      out.write("          animation: bgMove 14s ease-in-out infinite;\n");
      out.write("        }\n");
      out.write("        @keyframes bgMove {\n");
      out.write("          0% { background-position: 0% 50%; }\n");
      out.write("          50% { background-position: 100% 50%; }\n");
      out.write("          100% { background-position: 0% 50%; }\n");
      out.write("        }\n");
      out.write("        .card {\n");
      out.write("          background: #fff;\n");
      out.write("          border-radius: 28px;\n");
      out.write("          box-shadow: 0 8px 32px 0 rgba(52, 152, 219, 0.18), 0 1.5px 6px 0 rgba(0,0,0,0.07);\n");
      out.write("          padding: 36px 36px 24px 36px;\n");
      out.write("          min-width: 320px;\n");
      out.write("          display: flex;\n");
      out.write("          flex-direction: column;\n");
      out.write("          align-items: center;\n");
      out.write("          animation: fadeIn 1s cubic-bezier(.42,0,.58,1);\n");
      out.write("        }\n");
      out.write("        @keyframes fadeIn {\n");
      out.write("          from { opacity: 0; transform: translateY(40px); }\n");
      out.write("          to { opacity: 1; transform: translateY(0); }\n");
      out.write("        }\n");
      out.write("        .logo {\n");
      out.write("          width: 60px;\n");
      out.write("          height: 60px;\n");
      out.write("          object-fit: contain;\n");
      out.write("          margin-bottom: 10px;\n");
      out.write("          animation: float 3s ease-in-out infinite;\n");
      out.write("        }\n");
      out.write("        @keyframes float {\n");
      out.write("          0% { transform: translateY(0); }\n");
      out.write("          50% { transform: translateY(-8px); }\n");
      out.write("          100% { transform: translateY(0); }\n");
      out.write("        }\n");
      out.write("        h2 {\n");
      out.write("          color: ");
      out.print( success ? "#3b82f6" : "#d72660" );
      out.write(";\n");
      out.write("          margin-bottom: 10px;\n");
      out.write("          font-weight: 700;\n");
      out.write("          letter-spacing: 1px;\n");
      out.write("          text-align: center;\n");
      out.write("        }\n");
      out.write("        p {\n");
      out.write("          color: #2563eb;\n");
      out.write("          font-size: 1.1rem;\n");
      out.write("          margin-bottom: 18px;\n");
      out.write("          text-align: center;\n");
      out.write("        }\n");
      out.write("        .back-btn {\n");
      out.write("          background: linear-gradient(90deg, #3b82f6 0%, #60a5fa 100%);\n");
      out.write("          color: white;\n");
      out.write("          padding: 12px 36px;\n");
      out.write("          border: none;\n");
      out.write("          border-radius: 10px;\n");
      out.write("          cursor: pointer;\n");
      out.write("          font-size: 1.08rem;\n");
      out.write("          font-weight: 700;\n");
      out.write("          letter-spacing: 0.8px;\n");
      out.write("          box-shadow: 0 2px 10px 0 rgba(52, 152, 219, 0.10);\n");
      out.write("          margin-top: 12px;\n");
      out.write("          transition: background 0.3s, transform 0.2s;\n");
      out.write("        }\n");
      out.write("        .back-btn:hover {\n");
      out.write("          background: linear-gradient(90deg, #60a5fa 0%, #3b82f6 100%);\n");
      out.write("          transform: translateY(-2px) scale(1.03);\n");
      out.write("        }\n");
      out.write("        @media (max-width: 540px) {\n");
      out.write("          .card { min-width: 0; width: 94vw; padding: 20px 4vw 12px 4vw; }\n");
      out.write("          .logo { width: 40px; height: 40px; }\n");
      out.write("        }\n");
      out.write("    </style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    <div class=\"card\">\n");
      out.write("        <img src=\"./logo.png\" alt=\"Expense App Logo\" class=\"logo\">\n");
      out.write("        <h2>");
      out.print( msg );
      out.write("</h2>\n");
      out.write("        ");
 if (success) { 
      out.write("\n");
      out.write("            <p>Your payment has been processed successfully.</p>\n");
      out.write("        ");
 } else { 
      out.write("\n");
      out.write("            <p style=\"color:#d72660;\">");
      out.print( msg );
      out.write("</p>\n");
      out.write("        ");
 } 
      out.write("\n");
      out.write("        <form action=\"home.jsp\">\n");
      out.write("            <button class=\"back-btn\" type=\"submit\">Back to Home</button>\n");
      out.write("        </form>\n");
      out.write("    </div>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
